{"version":3,"sources":["types/types.js","helpers/fetch.js","actions/auth.js","components/ui/CloseMenu.js","components/ui/MenuIcon.js","components/ui/LogoutButton.js","components/ui/Header.js","actions/products.js","actions/cart.js","components/shop/AddCartButton.js","components/shop/ProductCard.js","components/shop/ProductsList.js","components/shop/ProductModal.js","components/shop/FilterBox.js","components/ui/Footer.js","components/shop/ShopScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","actions/order.js","components/shop/cart/CartItem.js","components/shop/cart/CartScreen.js","components/shop/order/OrderItem.js","components/shop/order/OrderScreen.js","routers/AppRouter.js","reducers/authReducer.js","reducers/cartReducer.js","reducers/orderReducer.js","reducers/productsReducer.js","reducers/rootReducer.js","store/store.js","App.js","index.js"],"names":["types","fetchWithoutToken","endpoint","payload","method","url","process","fetch","headers","body","JSON","stringify","fetchWithToken","localStorage","getItem","startLoginGoogle","tokenId","dispatch","a","googleToken","response","json","data","success","setItem","token","login","name","uid","Swal","fire","msg","user","type","authCheckingFinish","CloseMenu","className","MenuIcon","LogoutButton","useDispatch","onClick","removeItem","Header","useState","open","setOpen","useSelector","state","auth","to","startGetProducts","currentPage","orderBy","res","getProducts","products","totalPages","productRemoveActive","cartAddProduct","product","cartRemoveProduct","id","AddCartButton","cart","map","_id","includes","e","target","matches","position","title","showConfirmButton","timer","ProductCard","classList","contains","productSetActive","alt","src","img","price","ProductsList","length","ProductModal","activeProduct","description","FilterBox","selectValue","setSelectValue","handleChangePage","page","getAttribute","Number","buttonsPagination","i","onChange","value","defaultValue","Footer","rel","href","ShopScreen","useEffect","useForm","initialState","values","setValues","reset","newFormState","handleInputChange","LoginScreen","email","password","formValues","handleLogin","googleData","autoComplete","onSubmit","preventDefault","startLogin","clientId","buttonText","onSuccess","onFailure","cookiePolicy","RegisterScreen","password1","password2","handleRegisterGoogle","userForm","startRegistration","AuthRouter","exact","path","component","checkingOrders","finishCheckingOrders","deleteOrder","createNewOrder","order","listAllOrders","orders","CartItem","CartScreen","history","useHistory","additionalComment","setAddComment","setTotalPrice","arrayPrices","reduce","acum","priceProduct","push","placeholder","preorder","icon","OrderItem","date","Date","dateCreated","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","OrderScreen","checking","console","log","AppRouter","cartStorage","parse","forEach","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e6cd5bc.chunk.js","sourcesContent":["export const types = {\r\n\r\n    authCheckingFinish: '[auth] Checking login state',\r\n    authLogin: '[auth] Login User',\r\n    authLogout: '[auth] Logout User',\r\n    \r\n    productsAll: '[products] List all products',\r\n    productsByID: '[products] List product by id',\r\n    productsAllOrderByPrice: '[products] List all products order by price',\r\n    productSetActive: '[products] Set Active Product',\r\n    productRemoveActive: '[products] Remove Active Product',\r\n\r\n    cartfinishChecking: '[cart] finishChecking',\r\n    cartAddProduct: '[cart] Add Product to cart',\r\n    cartRemoveProduct: '[cart] Remove Product to cart',\r\n    cartClear: '[cart] Clear cart',\r\n\r\n    orderFinishChecking: '[order] finish Checking order',\r\n    orderStartChecking: '[order] start Checking order',\r\n\r\n    orderNewCreate: '[order] New Order',\r\n    orderListAll: '[order] Get Orders',\r\n    orderDeleteOne: '[order] Delete Order' \r\n}","export const fetchWithoutToken = (endpoint, payload, method='GET') => {\r\n\r\n    const url = `${process.env.REACT_APP_API_URL}/${endpoint}`\r\n\r\n    if(method==='GET'){\r\n    return fetch(url)\r\n    }\r\n    \r\n    return fetch(url, {\r\n        method,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)\r\n    })\r\n\r\n}\r\n\r\nexport const fetchWithToken = (endpoint, payload, method='GET') => {\r\n\r\n    const url = `${process.env.REACT_APP_API_URL}/${endpoint}`\r\n\r\n    if (method==='GET' || payload===\"\"){\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': localStorage.getItem('token')\r\n            }\r\n        })\r\n    }\r\n\r\n    return fetch(url, {\r\n        method,\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'x-token': localStorage.getItem('token')\r\n        },\r\n        body: JSON.stringify(payload)\r\n    })\r\n\r\n}","import { types } from \"../types/types\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nexport const startRegistration = ({name, email, password1}) => {\r\n\r\n    return async (dispatch) => {\r\n       \r\n        const userForm = {name, email, password: password1};\r\n\r\n        const res = await fetchWithoutToken('auth/new', userForm, 'POST');\r\n        const data = await res.json();\r\n\r\n        if(data.success){\r\n\r\n        localStorage.setItem('token', data.token);\r\n        dispatch(login({name, uid: data.uid}));\r\n        }else{\r\n            Swal.fire('error', data.msg, 'error');\r\n            \r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport const startLogin = ({email, password}) => {\r\n\r\n    return async (dispatch) => {    \r\n        const user = {email, password};\r\n        const res = await fetchWithoutToken('auth/login', user, 'POST');\r\n        const data = await res.json();\r\n\r\n        if (data.success){\r\n            localStorage.setItem('token', data.token);\r\n            dispatch(login({name: data.name, uid: data.uid}));\r\n        }else{\r\n            Swal.fire('error', data.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLoginGoogle = (tokenId) => {\r\n    return async (dispatch) => {\r\n        const response = await fetchWithoutToken('auth/google', {googleToken: tokenId}, 'POST')\r\n        const data = await response.json()\r\n\r\n        if (data.success){\r\n            localStorage.setItem('token', data.token);\r\n            dispatch(login({name: data.name, uid: data.uid}));\r\n        }else{\r\n            Swal.fire('error', data.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const logout = () => ({\r\n    type: types.authLogout\r\n})\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const res = await fetchWithToken('auth/renew');\r\n        const data = await res.json();\r\n\r\n        if(data.success){\r\n    \r\n            dispatch(login({name:data.name, uid: data.uid}))\r\n            localStorage.setItem('token', data.token)\r\n            \r\n        }else{\r\n            \r\n            localStorage.removeItem('token'); // token expiro    \r\n            dispatch(authCheckingFinish());\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const authCheckingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n","import React from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\nexport const CloseMenu = () => {\r\n    return (\r\n\r\n        <span><AiOutlineClose className=\"icon\"/></span>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { GiHamburgerMenu } from 'react-icons/gi';\r\n\r\n\r\nexport const MenuIcon = () => {\r\n    return (\r\n        <div>\r\n            <span><GiHamburgerMenu className=\"icon\"/></span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {RiLogoutBoxLine} from \"react-icons/ri\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from '../../actions/auth';\r\n\r\nexport const LogoutButton = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    return (\r\n        <div onClick={handleLogout} className=\"logout\">\r\n           <RiLogoutBoxLine />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { CloseMenu } from './CloseMenu';\r\nimport { MenuIcon } from './MenuIcon';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { LogoutButton } from './LogoutButton';\r\n\r\n\r\nexport const Header = () => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const user = useSelector( state => state.auth );\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n            \r\n                <header>\r\n                        <nav className={open ? `menu-drop` : ''}>\r\n                            <NavLink className=\"link active\" to=\"/\" >HOME</NavLink>\r\n                            <NavLink className=\"link \" to=\"/cart\">Cart</NavLink>\r\n                            {(user.uid) && <NavLink className=\"link \" to=\"/orders\">Orders</NavLink>}\r\n\r\n                           { (!user.uid) && \r\n                           <>\r\n                            <NavLink className=\"link \" to=\"/auth/login\">Sign in</NavLink>\r\n                            <NavLink className=\"link \" to=\"/auth/register\">Sign up</NavLink>\r\n                           </>\r\n                            }\r\n\r\n                            {\r\n                                (user.uid) &&\r\n                                <div className=\"user-data\">\r\n                                    <p>Welcome {user.name}</p>\r\n                                    <LogoutButton/> \r\n                                </div>\r\n                            }\r\n                         \r\n                        </nav>\r\n\r\n                            \r\n\r\n                            <div className=\"toggleButton\" onClick={handleClick}>\r\n                            {open   ? (<CloseMenu className=\"menu-icon\" />) \r\n                                    : (<MenuIcon className=\"menu-icon\" />)\r\n                            }\r\n                            </div>\r\n                 \r\n                </header>\r\n              \r\n           \r\n      );\r\n}\r\n","import { fetchWithoutToken } from '../helpers/fetch';\r\nimport {types} from '../types/types';\r\n\r\nexport const startGetProducts = (currentPage=1, orderBy) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        if(!orderBy){\r\n            orderBy=\"name\"\r\n        }\r\n\r\n        if (currentPage<=0){\r\n            currentPage=1\r\n        }\r\n        const pageSize = 8;\r\n        const res = await fetchWithoutToken(`products/?currentPage=${currentPage}&pageSize=${pageSize}&orderBy=${orderBy}`);\r\n        const data = await res.json();\r\n        dispatch(getProducts(data.products, currentPage, data.totalPages));\r\n    }\r\n\r\n}\r\n\r\nexport const getProducts = (products, currentPage, totalPages) => ({\r\n\r\n    type: types.productsAll,\r\n    payload: {products, currentPage, totalPages}\r\n\r\n})\r\n\r\nexport const productSetActive = (product) => ({\r\n    type: types.productSetActive,\r\n    payload: product\r\n})\r\n\r\nexport const productRemoveActive = () => ({\r\n    type: types.productRemoveActive\r\n})\r\n","import { types } from \"../types/types\"\r\n\r\nexport const cartAddProduct = (product) => ({\r\n    type: types.cartAddProduct,\r\n    payload: product\r\n})\r\n\r\nexport const cartRemoveProduct = (id) => ({\r\n    type: types.cartRemoveProduct,\r\n    payload: id\r\n})\r\n\r\nexport const cartClear = () => ({\r\n    type: types.cartClear\r\n})\r\n\r\nexport const cartfinishChecking = () => ({\r\n    type: types.cartfinishChecking\r\n})","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { cartAddProduct, cartRemoveProduct } from '../../actions/cart';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const AddCartButton = ({product}) => {\r\n    let {products} = useSelector( state => state.cart );\r\n\r\n    products = products.map(product=>product._id);\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleDeleteProductCart = () => {\r\n        \r\n        dispatch(cartRemoveProduct(product._id))\r\n        \r\n    }\r\n\r\n    const handleAddProductToCart = (e) => {\r\n        if (!e.target.matches('.disabled')){\r\n        dispatch(cartAddProduct(product));\r\n        }\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            title: 'Product added to cart',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n{   products.includes(product._id) \r\n    ?\r\n        <button className=\"btn-delete noModal\" onClick={handleDeleteProductCart}>Remove from your cart</button>\r\n    :\r\n        <button onClick={handleAddProductToCart} className=\"btn-green noModal\" >Add to your cart</button> \r\n         \r\n}\r\n        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { productSetActive } from '../../actions/products';\r\nimport { AddCartButton } from './AddCartButton';\r\n\r\nexport const ProductCard = ({product}) => {\r\n        \r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpenModal = (e) => {\r\n\r\n        if(!e.target.classList.contains(\"noModal\")){\r\n            dispatch(productSetActive(product));\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"itemCard\" onClick={handleOpenModal}>\r\n\r\n                <p className=\"titleProduct\">{product.name}</p>\r\n                <img className=\"imgProduct\" alt=\"\" src={`${product.img}` }/>\r\n                <div className=\"bottomProduct\">\r\n                    \r\n                    <p className=\"price\">{`Price: $${product.price}`}</p>\r\n\r\n                    <AddCartButton product={product} />\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            \r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ProductCard } from './ProductCard';\r\nimport './styleProducts.css';\r\n\r\nexport const ProductsList = ({products}) => {\r\n\r\n    if(products.length===0){\r\n        return <div className=\"box-loader\"><div className=\"loader\"></div></div>;\r\n    }\r\n    return (\r\n\r\n        <div className=\"containerItems\">\r\n            {\r\n                products.map(product=><ProductCard key={product._id} product={product} />)\r\n            }\r\n        </div>\r\n       \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { productRemoveActive } from '../../actions/products';\r\nimport { AddCartButton } from './AddCartButton';\r\nexport const ProductModal = () => {\r\n\r\n  \r\n    const product = useSelector( state => state.products.activeProduct);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n   \r\n    const handleCloseModal = () => {\r\n        dispatch(productRemoveActive());\r\n    }\r\n\r\n    return (\r\n            <div className=\"modal modalBox\">\r\n                <button className=\"btnCloseModal\" onClick={handleCloseModal}>X</button>\r\n                <p className=\"modal titleProduct\">{product.name}</p>\r\n                <p className=\"modal descProduct\">{product.description}</p>\r\n                <img className=\"modal imgProductModal\" alt=\"\" src={`${product.img}` }/>\r\n                <div className=\"modal bottomProduct\">\r\n                    <span className=\"modal price\">{`Price: $${product.price}`}</span>\r\n\r\n                    <AddCartButton product={product} />\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startGetProducts } from '../../actions/products';\r\nimport { GrNext, GrPrevious } from 'react-icons/gr';\r\n\r\nexport const FilterBox = () => {\r\n\r\n    const {currentPage, totalPages} = useSelector( state => state.products );\r\n    const [selectValue, setSelectValue] = useState(null);\r\n    const dispatch = useDispatch();\r\n        \r\n    const handleSortSelect = (e) => {\r\n\r\n        if (e.target.value === \"highlow\"){\r\n            setSelectValue(\"-price\");\r\n            dispatch( startGetProducts( currentPage, \"-price\" ) );\r\n\r\n        }else if (e.target.value === \"lowhigh\"){\r\n            setSelectValue(\"price\");\r\n            dispatch( startGetProducts( currentPage, \"price\" ) );\r\n        }\r\n        \r\n    }\r\n\r\n    const handleChangePage = (e) => {\r\n\r\n        const page = e.target.getAttribute('data-key');\r\n        if (page === 'prev'){\r\n            if(currentPage > 1 ){\r\n                dispatch( startGetProducts( currentPage - 1, selectValue ));\r\n\r\n            }\r\n        }else if (page === 'next'){\r\n            if(currentPage + 1 <= totalPages){\r\n\r\n                dispatch( startGetProducts( currentPage + 1, selectValue ));\r\n\r\n            }\r\n        }else{\r\n            \r\n            dispatch( startGetProducts(Number(page), selectValue));\r\n            \r\n        }\r\n        \r\n             \r\n    }\r\n    \r\n    let buttonsPagination = [<span key=\"-1\" className=\"btnPag\"><GrPrevious onClick={handleChangePage} data-key=\"prev\" key=\"prev\"/></span>]\r\n    \r\n    for (let i=1; i<=totalPages;i++){\r\n        buttonsPagination = [...buttonsPagination, <button className={currentPage === i ? \"btnPag btnDisabled\" : \"btnPag\"} data-key={`${i}`}  key={`${i}`} onClick={handleChangePage}>{i}</button>]\r\n    }\r\n    buttonsPagination = [...buttonsPagination, <span key=\"0\" className=\"btnPag\"><GrNext onClick={handleChangePage} data-key=\"next\" key=\"next\"/></span>]\r\n    \r\n    return (\r\n        <div className=\"filterBox\">\r\n        <select id=\"cars\" name=\"cars\" onChange={ handleSortSelect }>\r\n\r\n            <option key=\"default\" value=\"default\" defaultValue>Sort by</option>\r\n            <option key=\"highlow\" value=\"highlow\" >Price high - low</option>\r\n            <option key=\"lowhigh\" value=\"lowhigh\" >Price low - high</option>\r\n\r\n        </select>  \r\n        <div className=\"pagination\">\r\n            {\r\n                buttonsPagination\r\n            }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <a rel=\"noreferrer \"target=\"_blank\" href=\"https://github.com/zaimartinezj/shop-app-mern\">@zaimartinezj</a>\r\n        </footer>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport { Header } from '../ui/Header';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { productRemoveActive, startGetProducts } from '../../actions/products';\r\nimport { ProductsList } from './ProductsList';\r\nimport { ProductModal } from './ProductModal';\r\nimport { FilterBox } from './FilterBox';\r\nimport { Footer } from '../ui/Footer';\r\n\r\nexport const ShopScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const closeModal = (e) => {\r\n        if(activeProduct){\r\n        if(!e.target.matches(\".modal\")){\r\n            dispatch(productRemoveActive());\r\n        }\r\n    }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(startGetProducts());\r\n\r\n    }, [dispatch])\r\n\r\n    const {products, activeProduct} = useSelector( state => state.products );\r\n    \r\n    return (<div className=\"page\"  onClick={closeModal}>\r\n                <Header/>\r\n                \r\n                <FilterBox/>\r\n\r\n                <ProductsList products={products}/>\r\n\r\n                {activeProduct && <ProductModal/>}\r\n\r\n                <Footer/>\r\n            </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState={}) => {\r\n    \r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const reset = ( newFormState=initialState ) =>{\r\n        setValues( newFormState );\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{ // destruct el event\r\n        setValues({\r\n            ...values, \r\n            [target.name]: target.value\r\n        });\r\n     \r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n\r\n}","import React from 'react'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport \"./auth.css\";\r\nimport {useDispatch } from 'react-redux';\r\nimport { startLogin, startLoginGoogle } from '../../actions/auth';\r\nimport { Header } from '../ui/Header';\r\nimport { Footer } from '../ui/Footer';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\nexport const LoginScreen = () => {\r\n    const [formValues, handleInputChange] = useForm({email:'', password:''});\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(email.length > 0 && password.length > 0){\r\n            dispatch(startLogin({email, password}));\r\n        }else{\r\n            Swal.fire('Error', 'Invalid credentials', 'error');\r\n        }    \r\n    }\r\n\r\n    const {email, password} = formValues;  \r\n\r\n    const handleLogin = (googleData) => {\r\n\r\n        if (googleData.tokenId){\r\n            dispatch(startLoginGoogle(googleData.tokenId))\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n            <div autoComplete=\"off\" className=\"loginBox\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <h3 className=\"msgAuth\">SIGN IN</h3>\r\n                    <div className=\"boxInput\">\r\n                        <input \r\n                        className=\"inputForm\"\r\n                        type=\"email\" \r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={email}\r\n                        />\r\n                        <span className={ (email.length === 0) ? \"placeholder\" : \"placeholder placeholderWithText\"}> Email </span>\r\n                    </div>\r\n                    \r\n                    <div className=\"boxInput\">\r\n                        <input \r\n                            className=\"inputForm\"\r\n                            type=\"password\" \r\n                            name=\"password\"\r\n                            onChange={handleInputChange}\r\n                            value={password}/>\r\n                        <span className={ (password.length === 0) ? \"placeholder\" : \"placeholder placeholderWithText\"}> Password </span>\r\n                    </div>\r\n                    <input type=\"submit\" value=\"LOGIN\"/>\r\n                    <GoogleLogin\r\n                        clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n                        buttonText=\"Sign in with Google\"\r\n                        onSuccess={handleLogin}\r\n                        onFailure={handleLogin}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />  \r\n                    <p>Don't have an account? <NavLink className=\"navlink\" to=\"/auth/register\">Sign up</NavLink></p>      \r\n                \r\n\r\n                </form>\r\n\r\n               \r\n\r\n            </div>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLoginGoogle, startRegistration } from '../../actions/auth';\r\nimport { Header } from '../ui/Header';\r\nimport { Footer } from '../ui/Footer';\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const [formValues, handleInputChange] = useForm({name:'', email:'', password1:'', password2:''})\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(password1.length < 6){\r\n            return Swal.fire('Error', \"Password must contained at least 6 characters\", \"error\")\r\n        }\r\n        if(password1 !== password2){\r\n            return Swal.fire('Error', \"Passwords do not match \", \"error\")\r\n        }\r\n        if(email.length <= 0 || name.length <= 0){\r\n            return Swal.fire('Error', `${e.target.name.name} is required`, \"error\")\r\n        }\r\n        dispatch(startRegistration({name, email, password1}))\r\n        \r\n    }\r\n\r\n    const {name, email, password1, password2} = formValues;  \r\n\r\n    const handleRegisterGoogle = (googleData) => {\r\n\r\n        if (googleData.tokenId){\r\n            dispatch(startLoginGoogle(googleData.tokenId))\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <div className=\"loginBox\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <p className=\"msgAuth\">Sign up</p>\r\n                    <div className=\"boxInput\">\r\n                        <input \r\n                            autoComplete=\"nope\" \r\n                            className=\"inputForm\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            onChange={handleInputChange}\r\n                            value={name}\r\n                        />\r\n                        <span className={ (name.length === 0) ? \"placeholder\" : \"placeholder placeholderWithText\"}> Name </span>\r\n                    </div>\r\n                    <div className=\"boxInput\">\r\n\r\n                        <input\r\n                            className=\"inputForm\"\r\n                            type=\"email\" \r\n                            name=\"email\"\r\n                            onChange={handleInputChange}\r\n                            value={email}\r\n                        />\r\n                        <span className={ (email.length === 0) ? \"placeholder\" : \"placeholder placeholderWithText\"}> Email </span>\r\n\r\n                    </div>\r\n                    <div className=\"boxInput\">\r\n                        <input \r\n                            autoComplete=\"off\"\r\n                            className=\"inputForm\"\r\n                            type=\"password\" \r\n                            name=\"password1\"\r\n                            onChange={handleInputChange}\r\n                            value={password1}\r\n                        />\r\n                        <span className={ (password1.length === 0) ? \"placeholder\" : \"placeholder placeholderWithText\"}> Password </span>\r\n                    </div>\r\n                    <div className=\"boxInput\">\r\n                    <input\r\n                        autoComplete=\"off\"\r\n                        className=\"inputForm\"\r\n                        type=\"password\" \r\n                        name=\"password2\"\r\n                        onChange={handleInputChange}\r\n                        value={password2}\r\n                        /> \r\n                        <span className={ (password2.length === 0) ? \"placeholder\" : \"placeholder placeholderWithText\"}> Repeat Password </span>\r\n                    </div>\r\n                    <input type=\"submit\" value=\"REGISTER\"/>\r\n                    <GoogleLogin\r\n                        clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n                        buttonText=\"Sign up with Google\"\r\n                        onSuccess={handleRegisterGoogle}\r\n                        onFailure={handleRegisterGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />              \r\n                </form>\r\n            </div>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\nexport const AuthRouter = () => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n\r\n                <Route exact path=\"/auth/login\" component={ LoginScreen }/>\r\n                <Route exact path=\"/auth/register\" component={ RegisterScreen }/>\r\n\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n","import { fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\n\r\n//la idea seria.\r\n//se crea orden -> muestro en pantalla se creo orden con id tal\r\n\r\n//pantalla orders listar todas las orders de un user\r\n\r\nexport const startCreateNewOrder = (preorder) => {\r\n\r\n    return async (dispatch) => {\r\n        \r\n        const res = await fetchWithToken('orders/new', preorder, 'POST')\r\n        const data = await res.json();\r\n\r\n        if (data.success){\r\n            dispatch(createNewOrder({id: data.id, user: data.user, name: data.name, products: data.products}))\r\n        }\r\n\r\n    dispatch(checkingOrders()); \r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const startGetOrders = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const res = await fetchWithToken('orders');\r\n        const data = await res.json();\r\n        if(data.success){\r\n\r\n            dispatch(listAllOrders(data.orders))\r\n            \r\n        }else{\r\n\r\n            console.log(data.msg)\r\n\r\n        }\r\n        dispatch(finishCheckingOrders());\r\n    }\r\n}\r\n\r\nconst checkingOrders = () => ({ //para que cada vez que se genere una orden y se vuelven a cargar las ordenes aparezca loader\r\n    type: types.orderStartChecking\r\n})\r\n\r\nconst finishCheckingOrders = () => ({\r\n    type: types.orderFinishChecking\r\n})\r\n\r\nexport const startDeletingOrder = (id) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const res = await fetchWithToken(`orders?id=${id}`, \"\", 'DELETE')\r\n        \r\n        const data = await res.json();\r\n\r\n        if (data.success){\r\n            dispatch(deleteOrder(id));\r\n        }\r\n        dispatch(checkingOrders())\r\n    }\r\n\r\n} \r\n\r\n// export const startEditOrder = (order) => {\r\n\r\n\r\n\r\n// }\r\n\r\nconst deleteOrder = (id) => ({\r\n    type: types.orderDeleteOne,\r\n    payload: id\r\n})\r\n\r\nconst createNewOrder = (order) => ({\r\n    type: types.orderNewCreate,\r\n    payload: order\r\n})\r\n\r\nconst listAllOrders = (orders) => ({\r\n    type: types.orderListAll,\r\n    payload: orders\r\n})","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { cartRemoveProduct } from '../../../actions/cart';\r\nimport {AiOutlineDelete} from 'react-icons/ai';\r\n\r\nexport const CartItem = ({product}) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const handleDeleteProductCart = () => {\r\n        \r\n        dispatch(cartRemoveProduct(product._id))\r\n        \r\n    }\r\n\r\n    return (\r\n        <tr key={product._id}>\r\n                            <td >{product.name}</td>\r\n                            <td>{product.description}</td>\r\n                            <td>${product.price}</td>\r\n                            <td><button className=\"btn-delete\" onClick={handleDeleteProductCart}><AiOutlineDelete/></button></td>\r\n        </tr>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startCreateNewOrder } from '../../../actions/order';\r\nimport { Footer } from '../../ui/Footer';\r\nimport { Header } from '../../ui/Header';\r\n\r\nimport { CartItem } from './CartItem';\r\nimport { cartClear } from '../../../actions/cart';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nexport const CartScreen = () => {\r\n    \r\n    const history = useHistory();\r\n\r\n    const {products} = useSelector( state => state.cart );\r\n    const {uid} = useSelector( state => state.auth );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [additionalComment, setAddComment] = useState(\"\");\r\n    \r\n    const [price, setTotalPrice] = useState(0)\r\n\r\n    const handleAddComment = (e) => {\r\n        setAddComment(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(products.length > 0){\r\n            const arrayPrices = products.map(product=>Number(product.price));\r\n            setTotalPrice(arrayPrices.reduce((acum, priceProduct)=>acum + priceProduct));\r\n        }else{\r\n            setTotalPrice(0)\r\n        }\r\n    }, [products])\r\n\r\n    const handleNewOrder = () => {\r\n\r\n        const order = {\r\n            products,\r\n            additionalComment\r\n        }\r\n\r\n        dispatch(startCreateNewOrder(order));\r\n\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: 'Order created!',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n          })\r\n        dispatch(cartClear());\r\n    }\r\n    \r\n    if (products.length === 0){\r\n        return <>\r\n            <Header/>\r\n            <div className=\"screen\">\r\n            <h1>Your cart is empty!</h1>\r\n            <button onClick={()=>{\r\n                        return history.push('/')}}\r\n                    >\r\n                        Go back to the shop\r\n                    </button>\r\n            </div>\r\n            <Footer/>\r\n        </>\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n        <div className=\"screen-table\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product</th>\r\n                        <th>Description</th>\r\n                        <th>Price</th>\r\n                        <th>Options</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                                products.map(product=><CartItem key={product._id} product={product}/>)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <div className=\"cart-order-form\">\r\n                <p>Total price: ${price}</p>\r\n                <textarea\r\n                    className=\"addComment\"\r\n                    placeholder=\"Additional comments (optional)\"\r\n                    value={additionalComment}\r\n                    onChange={handleAddComment}\r\n                    />\r\n                    {\r\n                uid ?\r\n                <button className=\"btn-green\" onClick={handleNewOrder}>Make an order!</button> \r\n                    :<>\r\n                <button className=\"btn-green btnDisabled\">Make an order!</button>\r\n                <NavLink className=\"navlink\" to=\"/auth/login\">Sign in to make an order</NavLink>\r\n                </>\r\n                    }\r\n\r\n            </div>\r\n        </div>\r\n        <Footer/>        \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import { BiEdit } from 'react-icons/bi';\r\nimport {AiOutlineDelete} from 'react-icons/ai';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startDeletingOrder } from '../../../actions/order';\r\n\r\nexport const OrderItem = ({order}) => {\r\n    const dispatch = useDispatch();\r\n    const handleDeleteOrder = () => {\r\n        dispatch(startDeletingOrder(order._id));\r\n    }\r\n\r\n    // const handleEditOrder = () => {\r\n\r\n    // }\r\n\r\n    const date = new Date(order.dateCreated);\r\n    \r\n    return (\r\n        <tr key={order._id}>\r\n            <td className=\"orderId\">{order._id}</td>\r\n            <td> {\r\n                 order.products.map(product=><p key={product._id + order._id}> {product.name} </p>)\r\n            }\r\n            </td>\r\n            <td>{`${date.getDate()}/${date.getMonth()}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`}</td>\r\n            <td>\r\n                {/* <button onClick={ handleEditOrder } className=\"btn-edit\"><BiEdit/></button> */}\r\n                <button onClick={ handleDeleteOrder } className=\"btn-delete\"><AiOutlineDelete/></button>\r\n            </td> \r\n        </tr>\r\n        \r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { startGetOrders } from '../../../actions/order';\r\nimport { Footer } from '../../ui/Footer';\r\nimport { Header } from '../../ui/Header';\r\nimport { OrderItem } from './OrderItem';\r\n\r\nexport const OrderScreen = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const {orders, checking} = useSelector( state => state.order );\r\n\r\n    useEffect(() => {\r\n        dispatch(startGetOrders())\r\n    }, [dispatch, checking])\r\n\r\n\r\n    if (checking){\r\n        return <>\r\n                    <Header/>\r\n                    <div className=\"screen\">\r\n                        <div className=\"box-loader\"><div className=\"loader\"></div>\r\n                        <p>Loading orders. . .</p>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <Footer/>\r\n        </>\r\n    }\r\n    \r\n    if (orders.length === 0){\r\n        return <>\r\n               <Header/>\r\n                <div className=\"screen\">\r\n                    <h1>You do not have any order yet!</h1>\r\n                    <button onClick={()=>{\r\n                        return history.push('/')}}\r\n                    >\r\n                        Go back to the shop\r\n                    </button>\r\n                </div>\r\n                <Footer/>\r\n        </>\r\n    }\r\n    return (\r\n      <>\r\n        <Header/>\r\n\r\n           <div className=\"screen-table\">\r\n                <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Order id</th>\r\n                        <th>Products</th>\r\n                        <th>Date</th>\r\n                        <th>Options</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    \r\n                    {                   \r\n                        orders.map(order=><OrderItem key={order._id} order={order} />)                   \r\n                    }\r\n                    \r\n                    \r\n                </tbody>\r\n                </table>\r\n            </div>\r\n            <Footer/>\r\n            </>\r\n\r\n    )\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { ShopScreen } from \"../components/shop/ShopScreen\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { CartScreen } from \"../components/shop/cart/CartScreen\";\r\nimport { OrderScreen } from \"../components/shop/order/OrderScreen\";\r\nimport { cartAddProduct, cartfinishChecking } from \"../actions/cart\";\r\n\r\nexport const AppRouter = () => {\r\n const dispatch = useDispatch();\r\n const {checking, uid} = useSelector( state => state.auth );\r\n const {products} = useSelector( state => state.cart );\r\n\r\n//Cuando carga pagina por primera vez chequear el cart del localStorage\r\n  useEffect(()=>{\r\n    const cartStorage = localStorage.getItem('cart');\r\n      if (cartStorage){  \r\n\r\n        const cartProducts = JSON.parse(cartStorage);\r\n        cartProducts.forEach(product => {\r\n           if(product){\r\n           dispatch(cartAddProduct(product));\r\n         }\r\n         })\r\n   } \r\n   dispatch(cartfinishChecking());\r\n\r\n  }, [dispatch])\r\n\r\n  //si se modifica el store del cart, actualizar localStorage\r\n  useEffect(() => {\r\n    if(products){\r\n      localStorage.setItem('cart', JSON.stringify(products));\r\n    }\r\n  }, [products])\r\n\r\n//Chequeo logeo \r\n  useEffect(() => {\r\n        \r\n    dispatch(startChecking());\r\n\r\n    if (uid){\r\n      console.log(\"redirect\");\r\n      return <Redirect to='/'/>;\r\n\r\n    }\r\n  }, [dispatch, uid])\r\n\r\n  //Loading page (mejorar)\r\n  if (checking){\r\n    return <div className=\"box-loader\"><div className=\"loader\"></div></div>;\r\n  }\r\n\r\n  return (\r\n    \r\n    <Router>\r\n        <div>\r\n            <Switch>\r\n          {!uid &&\r\n            <AuthRouter path=\"/auth\"/> \r\n          }\r\n          {uid && \r\n          <Route exact path=\"/orders\" component={ OrderScreen }/>\r\n          }\r\n            <Route exact path=\"/cart\" component={ CartScreen }/>\r\n            <Route path=\"/\" component={ ShopScreen }/>\r\n            <Redirect to=\"/\"/>\r\n            </Switch>\r\n        </div>\r\n    </Router>\r\n  );\r\n}","\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking:true,\r\n    uid: null,\r\n    name: null}\r\n\r\nexport const authReducer = (state=initialState, action) => {\r\n     switch (action.type) {\r\n\r\n        case types.authLogin: \r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {checking: false,};\r\n         default:\r\n             return state;\r\n     }\r\n }","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    products: [],\r\n    checking: true\r\n}\r\n\r\nexport const cartReducer = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.cartfinishChecking:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.cartAddProduct:\r\n            return {\r\n                ...state,\r\n                products: [...state.products, action.payload]\r\n            }\r\n        case types.cartRemoveProduct:\r\n            return {\r\n                ...state,\r\n                products: (state.products).filter((product)=>product._id !== action.payload)\r\n            }\r\n        case types.cartClear:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState=  {\r\n        orders: [],\r\n        checking: true\r\n    }\r\n\r\nexport const orderReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case types.orderStartChecking: \r\n            return {\r\n                ...state,\r\n                checking: true\r\n            }\r\n        case types.orderFinishChecking:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.orderNewCreate:\r\n            return {\r\n                ...state,\r\n                orders: [...state.orders, action.payload]\r\n            }\r\n        case types.orderListAll:\r\n            return {\r\n                ...state,\r\n                orders: action.payload\r\n            }\r\n        case types.orderDeleteOne:\r\n            return {\r\n                ...state,\r\n                orders: state.orders.filter(order=>order._id!==action.payload)\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState={\r\n    currentPage:null,\r\n    totalPages:null,\r\n    activeProduct: null,\r\n    products: []\r\n}\r\n\r\nexport const productsReducer = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.productsAll:\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload.currentPage,\r\n                totalPages: action.payload.totalPages,\r\n                products: action.payload.products\r\n            }\r\n        case types.productSetActive:\r\n            return {\r\n                ...state,\r\n                activeProduct: action.payload\r\n            }    \r\n        case types.productRemoveActive:\r\n            return {\r\n                ...state,\r\n                activeProduct:null\r\n            }\r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { cartReducer } from \"./cartReducer\";\r\nimport { orderReducer } from \"./orderReducer\";\r\nimport { productsReducer } from \"./productsReducer\";\r\n\r\nexport const rootReducer = \r\n        combineReducers({\r\n            auth: authReducer,\r\n            products: productsReducer,\r\n            cart: cartReducer,\r\n            order: orderReducer\r\n        })\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n//para tener el Redux DevTools Extension y el middleware\r\n\r\nexport const store = createStore(\r\n    \r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk ) // para tareas asincronas\r\n    )\r\n);","import React from \"react\";\nimport \"./index.css\";\nimport { AppRouter } from './routers/AppRouter';\nimport { Provider } from 'react-redux';\nimport { store } from \"./store/store\";\n\nfunction App() {\n  return (\n    <>\n      <Provider store={store}>\n        <AppRouter/>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n\n    <App />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}